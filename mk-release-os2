#!/bin/sh
set -e
WARPIN="d:\prg\WarpIN"
DLLPATH="d:\prg\emx\dll"
#DLLS="bz2.dll cryptssl.dll jpeg.dll lzma.dll png.dll open_ssl.dll z.dll"
DLLS=""
FILES="AUTHORS BRAILLE COPYING KEYS README links.crt links.exe linksos2.ico"
#CC="gcc.exe"
#export CC
#CFLAGS="-O3 -fomit-frame-pointer -march=i386 -mcpu=pentium -Wall -W -Wno-unused-parameter -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations"
#export CFLAGS
CC="gcc2.exe"
export CC
CFLAGS="-O3 -fomit-frame-pointer -m386 -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations"
export CFLAGS
rc -r linksos2.rc linksos2.res
LIBS=linksos2.res
export LIBS
if [ ! -f Makefile -o ! -f config.h ]; then
	bash ./configure --enable-graphics --without-x --disable-utf8 --disable-debuglevel
	cat config.status			|
		sed 's/-lcrypto\>/-lcrypto_s/'	|
		sed 's/-lssl\>/-lssl_s/'	|
		sed 's/-lz\>/-lz_s/'		|
		sed 's/-lbz2\>/-lbz2_s/'	|
		sed 's/-llzma\>/-llzma_s/'	|
		sed 's/-lpng\>/-lpng_s/'	|
		sed 's/-ljpeg\>/-ljpeg_s/'	|
		cat >config.status.new
	mv config.status.new config.status
	./config.status
fi
make
emxbind -s links.exe
emxbind -a links.exe -h192
#cp links.exe links-g.exe
#emxbind -ep links-g.exe

for i in $DLLS; do
	cp "$DLLPATH\\$i" .
done
cp BRAILLE_HOWTO BRAILLE
cp certs\\links.crt links.crt

rm -f links.wpi
cmd /c set BEGINLIBPATH="$WARPIN" \& "$WARPIN\wic.exe" -a links.wpi 1 $FILES $DLLS -s links.wis

rm -rf links links.zip
mkdir links
cp $FILES $DLLS links
mv links/linksos2.ico links/links.ico
pkzip /Add /Recurse /Path /NoExtended links.zip links\\
rm -rf links
rm $DLLS BRAILLE
